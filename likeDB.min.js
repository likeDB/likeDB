/**
 * @class likeDB
 * @author   Hassani Mohammed El Habib <https://github.com/Mouhamedtec>
 * @license  MIT
 */
class likeDB{constructor(t){if(this.DBS=t,this.dbSchema={tables:[]},this.tableSchema={tbName:String,tbFields:[],tbRows:[]},this.fieldSchema={pk:!1,n:"",t:null,u:!1,d:null},void 0===t||!t.trim().length)throw new Error("No Database Selected")}getDB(){const t=JSON.parse(localStorage.getItem(this.DBS.toString()));return t||[]}isTableExists(t){const e=this.getDB();if("string"==typeof t&&0!==t.trim().length){if(!Object.values(e).length)throw Error('No database was found with the name "'+this.DBS+'"');return!0===e.tables.map(e=>e.tbName===t).includes(!0)}throw Error("Table Name is missing !")}isFieldExists(t,e){return!0===t.map(t=>t.n===e).includes(!0)}createDB(){if(Object.values(this.getDB()).length)throw new Error('Database "'+this.DBS+'"already exists, Try with diffrent database name');try{return localStorage.setItem(this.DBS.toString(),JSON.stringify(this.dbSchema)),!0}catch(t){throw Error(t)}}dropDB(){if(!Object.values(this.getDB()).length)throw Error('No database was found with the name "'+this.DBS+'"');try{return localStorage.removeItem(this.DBS),!0}catch(t){throw Error('Drop failed for database "'+this.DBS+'"')}}createTable(t){const e=this.getDB();if(!Object.values(e).length)throw Error('No database was found with the name "'+this.DBS+'"');if(!0===this.isTableExists(t))throw Error('Table "'+t+'" already exists, Try with diffrent database name');this.tableSchema.tbName=t.toString(),e.tables.push(this.tableSchema);try{return localStorage.setItem(this.DBS,JSON.stringify(e)),!0}catch(t){throw Error("An error occurred while creating the table")}}dropTable(t){const e=this.getDB();if(!Object.values(e).length)throw Error('No database was found with the name "'+this.DBS+'"');if(!0!==this.isTableExists(t))throw Error('No table was found with the name "'+t+'"');e.tables=e.tables.filter(e=>e.tbName!==t);try{return localStorage.setItem(this.DBS,JSON.stringify(e)),!0}catch(e){throw Error('An error occurred while try to drop the table "'+t+'" ')}}createField(t="",e="",r="",i=!0,s="",a=!1){if(!arguments.length)throw Error("No arguments were supplied");const o=this.getDB();if(!Object.values(o).length)throw Error('No database was found with the name "'+this.DBS+'"');if("string"!=typeof t||0===t.length||"string"!=typeof e||0===e.length||"boolean"!=typeof a)throw Error("some arguments are missing or not properly set");if(!0!==this.isTableExists(t))throw Error('No table was found with the name "'+t+'"');var h=o.tables.find(e=>e.tbName===t);if(!1!==this.isFieldExists(h.tbFields,e))throw Error('A field with the name "'+e+'" already exists, Please Try with diffrent field name');this.fieldSchema.n=e,this.fieldSchema.t=r,this.fieldSchema.u=(!0===i||!1===i)&&i,this.fieldSchema.d=0!==s.length?s:null,this.fieldSchema.pk=(!0===a||!1===a)&&a,h.tbFields.push(this.fieldSchema);try{return localStorage.setItem(this.DBS,JSON.stringify(o)),h.tbFields.at(-1)}catch(t){throw Error("An error occurred while creating the Field")}}dropField(t="",e=""){if(!arguments.length)throw Error("No arguments were supplied");const r=this.getDB();if(!Object.values(r).length)throw Error('No database was found with the name "'+this.DBS+'"');if(!0!==this.isTableExists(t))throw Error('No table was found with the name "'+t+'"');r.tables.filter(function(r){r.tbName===t&&(r.tbFields=r.tbFields.filter(t=>t.n!==e))&&(r.tbRows=r.tbRows.filter(t=>!t.hasOwnProperty(e)))});try{return localStorage.setItem(this.DBS,JSON.stringify(r)),!0}catch(e){throw Error('An error occurred while try to drop field from the table "'+t+'" ')}}insert(t,...[e]){if(!arguments.length)throw Error("No arguments were supplied");const r=this.getDB();if(!Object.values(r).length)throw Error('No database was found with the name "'+this.DBS+'"');const i=[];if(!0!==this.isTableExists(t))throw Error('No table was found with the name "'+t+'"');if("object"!=typeof e||"object"==typeof e&&0===Object.values(e).length)throw Error("Fields are missing or not properly set");var s=this.isFieldExists;r.tables.find(function(r){if(r.tbName===t){var a=r.tbFields;if(!a.length)throw Error('Table "'+t+'" has no Fields associated with it.');var o=[];for(let t=0,r=Object.entries(e);t<r.length;t++)if(a.filter(e=>e.n===r[t][0]).length,0!==a&&o.push(a.length),!s(a,r[t][0]))throw Error('Table has no fields with the name "'+r[t][0]+'" .');o.length===a.length&&r.tbRows.push(e)&&i.push(r.tbRows.at(-1))}});try{localStorage.setItem(this.DBS,JSON.stringify(r))}catch(e){throw Error('An error occurred while inserting to table "'+t+'"')}return i.length?i[0]:null}select(t,...[e]){if(!arguments.length)throw Error("No arguments were supplied");const r=this.getDB();if(!Object.values(r).length)throw Error('No database was found with the name "'+this.DBS+'"');const i=[];if(!0!==this.isTableExists(t))throw Error('No table was found with the name "'+t+'"');return r.tables.filter(function(r){r.tbName===t&&(r.tbFields=r.tbFields.filter(t=>e.includes(t.n)),e.map(function(t,e){r.tbRows.filter(function(e){var r={};void 0!==e[t]&&(r[t]=e[t],i.push(r))})}))}),i}update(t,e,...[r]){if(!arguments.length)throw Error("No arguments were supplied");const i=this.getDB();if(!Object.values(i).length)throw Error('No database was found with the name "'+this.DBS+'"');if(!0!==this.isTableExists(t))throw Error('No table was found with the name "'+t+'"');i.tables.filter(function(i){if(i.tbName===t){if(i.tbFields=i.tbFields.filter(t=>Object.keys(r).includes(t.n)),!Object.values(i.tbFields).length)throw Error("Mismatch error, please check for fields name are same as in table.");i.tbRows.filter(function(t){if(!(!Object.keys(t).includes(Object.keys(e).toString())||!Object.values(t).includes(Object.values(e).toString())))for(let e in r)void 0!==t[e]&&(t[e]=r[e])})}});try{return localStorage.setItem(this.DBS,JSON.stringify(i)),!0}catch(t){throw Error("An error occurred while trying to update")}}delete(t,e){if(!arguments.length)throw Error("No arguments were supplied");const r=this.getDB();if(!Object.values(r).length)throw Error('No database was found with the name "'+this.DBS+'"');if(!0!==this.isTableExists(t))throw Error('No table was found with the name "'+t+'"');r.tables.filter(function(r){r.tbName===t&&(r.tbRows=r.tbRows.filter(function(t){for(let r in e)if(t[r]===e[r])return t[r]!==e[r];return t}))});try{return localStorage.setItem(this.DBS,JSON.stringify(r)),!0}catch(t){throw Error("An error occurred while trying to delete")}}}